#!/bin/bash
#
# chkinst - Check if installed versions of files in current directory are
#    different in order to determine if git repository is up-to-date.
#
# Written 8-Mar-2014 by Ronald Joe Record
#
# Note: this script assumes the files in your git repository are named the
#       same as their installed counterparts
# Copyright (c) 2014, Ronald Joe Record
# All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# The Software is provided "as is", without warranty of any kind, express or
# implied, including but not limited to the warranties of merchantability,
# fitness for a particular purpose and noninfringement. In no event shall the
# authors or copyright holders be liable for any claim, damages or other
# liability, whether in an action of contract, tort or otherwise, arising from,
# out of or in connection with the Software or the use or other dealings in
# the Software.
#

usage() {
    printf "\nUsage: chkinst [-u] [-a] [-d]"
    printf "\nWhere:"
    printf "\n\t-u displays this usage message"
    printf "\n\t-a indicates report on all files, not just those installed"
    printf "\n\t-d indicates display output of a diff between files\n"
    exit 1
}

differ() {
    echo "$1 differs from installed version $2"
    [ "$DIFF" ] && diff "$1" "$2"
    echo ""
}

ALL=
DIFF=
while getopts adu flag; do
    case $flag in
        a)
            ALL=1
            ;;
        d)
            DIFF=1
            ;;
        u)
            usage
            ;;
    esac
done
shift $(( OPTIND - 1 ))

for i in *
do
    [ -d "$i" ] && continue
    inst=`type -p "$i"`
    [ "$inst" ] || {
        [ "$ALL" ] && {
            echo "$i does not appear to be installed as a command. Skipping."
            echo ""
        }
        continue
    }
    # Special case wb as the installed version has a wallbase user/password
    [ "$i" = "wb" ] && {
        dnum=`diff "$i" "$inst" | wc -l`
        [ $dnum -gt 8 ] && differ "$i" "$inst"
        continue
    }
    # For everything but wb just use cmp
    cmp -s "$i" "$inst" || differ "$i" "$inst"
done
