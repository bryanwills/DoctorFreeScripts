#!/bin/bash
#
# latest - list the top N newest files in a directory or directory hierarchy
#
# Written November 1, 2013 by Ronald Joe Record <rr@ronrecord.com>
#

usage() {
   printf "Usage: latest [-a] [-n] [-d directory] [-u] [num]\n"
   printf "\nWhere:\n"
   printf "\t-a specifies all directory entries, not just plain files\n"
   printf "\t-n specifies no recursion, current dir or specified dir only\n"
   printf "\t-d directory specifies the directory to use\n"
   printf "\tnum specifies the number of files to list\n"
   printf "\t-u prints this usage message and exits\n\n"
   exit 1
}

DIR="."
RECURSE=1
NUM=10
TYPE="-type f"

while getopts d:anu flag; do
   case $flag in
      a)
         TYPE="";
         ;;
      d)
         DIR="$OPTARG";
         ;;
      n)
         RECURSE=;
         ;;
      u)
         usage;
         ;;
   esac
done
shift $(( OPTIND - 1 ));

[ "$1" ] && {
    #if expr "$1" : '[0-9]\+$' >/dev/null
    test $1 -eq 0 2>/dev/null
    if [ $? -eq 2 ]; then
        echo "Unrecognized command line option $1"
        usage
    else
        NUM=$1
    fi
}

if [ "$RECURSE" ]
then
    find "$DIR" $TYPE -print0 | xargs -0 stat -f "%m %N" | sort -n | tail -$NUM | cut -f2- -d" "
else
    if [ "$TYPE" ]
    then
        ls -rt1 | while read foo
        do
            [ -f "$foo" ] && echo $foo
        done | tail -n$NUM
    else
        ls -rt1 | tail -n$NUM
    fi
fi
