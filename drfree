#
# drfree - function to make it easy for me to move around in my projects
# usage: drfree <action> <project>
#    where <action> is one of "build", "clone", "cd", "delete"
#    and <project> is the name of a project or one of the shortcuts
#    "images", "instagram", "mirror", "roon", "scenes", "scripts", or "telegram"
#
# Dot this file in to your .bashrc or other shell startup
# e.g. in $HOME/.bashrc add the following lines:
#
#   if [ -f /usr/local/share/bash/drfree ]; then
#     . /usr/local/share/bash/drfree
#   fi

drfree() {
  if [ "$#" -ne 2 ]
  then
    echo '
usage: drfree <action> <project>
   where <action> is one of "build", "clone", "cd", or "delete"
   and <project> is the name of a project or one of the shortcuts
   "images", "instagram", "mirror", "roon", "scenes", "scripts", or "telegram"
'
  else
    # The default build script is named "mkpkg"
    # If a project has a front-end build script named anything different
    # then set BUILD="whatever" below in that project's case statement
    # The BUILD keyword "MM" is used to signify a MagicMirror build which will
    # do a "git pull" and then "npm install" in the project directory.
    BUILD="mkpkg"
    case "$2" in
      images)
        PROJECT="MirrorImagesPortrait"
        ;;
      instagram)
        PROJECT="MMM-InstagramView"
        BUILD="MM"
        ;;
      macscan*|macaddress*)
        PROJECT="MMM-MacAddressScan"
        BUILD="MM"
        ;;
      mirror)
        PROJECT="MirrorCommand"
        ;;
      roon)
        PROJECT="RoonCommandLine"
        ;;
      scenes)
        PROJECT="MMM-Scenes"
        BUILD="MM"
        ;;
      scripts)
        PROJECT="DoctorFreeScripts"
        ;;
      telegram)
        PROJECT="MMM-TelegramCommands"
        BUILD="MM"
        ;;
      youtube*|webview*)
        PROJECT="MMM-YouTubeWebView"
        BUILD="MM"
        ;;
      *)
        PROJECT="$2"
        ;;
    esac

    case "$1" in
      build)
        if [ -d ${HOME}/src/${PROJECT} ]
        then
            cd ${HOME}/src/${PROJECT}
            git pull
        else
            [ -d ${HOME}/src ] || mkdir ${HOME}/src
            cd ${HOME}/src
            git clone https://gitlab.com/doctorfree/${PROJECT}.git
            cd ${PROJECT}
        fi
        if [ -x ./${BUILD} ]
        then
            ./${BUILD}
        else
            if [ "${BUILD}" == "MM" ]
            then
                git pull
                npm_inst=`type -p npm`
                if [ "${npm_inst}" ]
                then
                    npm install
                else
                    echo "Could not locate npm in PATH"
                    echo "Skipping 'npm install' in ${PROJECT}"
                fi
            else
                echo "Missing or non-executable ${BUILD} in ${PROJECT} project"
            fi
        fi
        ;;
      clone)
        [ -d ${HOME}/src ] || mkdir ${HOME}/src
        cd ${HOME}/src
        if [ -d ${PROJECT}/.git ]
        then
            cd ${PROJECT}
            echo "Pulling in existing project directory ${PROJECT}"
            git pull
        else
            if [ -x ./clone-${PROJECT}.sh ]
            then
                ./clone-${PROJECT}.sh
            else
                git clone https://gitlab.com/doctorfree/${PROJECT}.git
            fi
            cd ${PROJECT}
        fi
        ;;
      cd)
        if [ -d ${HOME}/src/${PROJECT} ]
        then
            cd ${HOME}/src/${PROJECT}
        else
            [ -d ${HOME}/src ] || mkdir ${HOME}/src
            cd ${HOME}/src
            git clone https://gitlab.com/doctorfree/${PROJECT}.git
            cd ${PROJECT}
        fi
        ;;
      delete)
        if [ -d ${HOME}/src/${PROJECT} ]
        then
            delete=
            while true
            do
              read -p "Delete ${HOME}/src/${PROJECT} ? ('Y'/'N'): " yn
              case $yn in
                [Yy]*)
                    delete=1
                    break
                    ;;
                [Nn]*)
                    delete=
                    break
                    ;;
                * )
                    echo "Please answer yes or no."
                    ;;
              esac
            done
            [ "${delete}" ] && rm -rf ${HOME}/src/${PROJECT}
        else
           echo "No directory ${HOME}/src/${PROJECT}"
        fi
        ;;
      *)
        echo "Unknown action: $1"
        ;;
    esac
  fi
}
