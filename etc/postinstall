#!/bin/bash
# postinstall script for DoctorFreeScripts
#

set -e

export PATH=/usr/local/bin:$PATH
# Scripts for which links will be made in /usr/local/bin
EXPORT1="any2any aptsearch audlinks backgrounds build-sgminer cap2any \
         catinfo check_ethminer chk chkall chkrel ckdown ckdups clndl \
         convm4a counts cpBackups cptoflash create_speech createswapfile \
         cron.bash dltor dtox ethos2local favrotate fdups fempiclinks \
         femzip filenuminc filenumset findabslinks findbroken findempty \
         findgrep findups findupthumbs fixabslinks fixlinks get-all \
         get-anime get-artists get-background getcounts get-favorites \
         get-general getgittag gethue get-label get-latest get-list \
         get-missing get-model get-model-latest get-models get-number \
         get-people get-photographers getpyethereum getsaver get-search \
         get-sizes gettagdate get-top gitarch gitbranch gitdiff githubgit \
         githubinit gitinit gitlog gitlogtoday gitshow gittag hangup \
         imfonts.pl installamdgpu install-to-project-repo.py instdeb \
         keybinds-pipemenu killscreen latest lgitinit linkhaven listgit \
         journalclean doctorinfo mandelhist mkcomps mkdiffs mkviteproj"
EXPORT2="mklink md2man mkreadme mkseamless mkusb mkwmv models mp3topic mvBackups \
         mvdown myterm nouchg obam.pl only packaud pcmanslideshow piclinks \
         playkeynote progress_bar puml randback randmodel reget remdeb \
         revlink ripvcr rmBackups rmdups rmlandscape rmportargs rmportrait \
         rpm2cpio saver sdbackup sderase sdlist sdmount sdumount sdrestore \
         sdwrite show-background showmem sndprobe synchaven syncitunes \
         synergyctl timemachinedelete upd updflash updgit updsums updtranscend \
         updtz url-create variety-beauty variety-config variety-favorite \
         variety-fractals variety-get variety-next variety-prev variety-quit \
         variety-select variety-set variety-start vidlinks webloc2url wh wikivim \
         xmldiff xoff xstop yaml2json zipiso disable-update-notifier"
DFS="/usr/local/DoctorFreeScripts"
ANY="ape2m4a ape2mp4 avi2mp4 f4v2mp4 flv2mp4 \
     m4a2mp3 m4v2mp4 mkv2mp4 mov2mp4 mp42m4v \
     mpg2mp4 png2jpg wma2m4a wmv2m4v wmv2mp4"
CAP="cap2m4v cap2mp4"
UPD="updaplibs updphotoslibs upditunes updpicdir updmovdir updauddir updhome"
BGD="slides slideshow"
CHK="chkaplibs chkitunes chkpicdir chkmovdir chkauddir chkhome"
[ -d /usr/local ] || mkdir /usr/local
[ -d /usr/local/bin ] || mkdir /usr/local/bin
cd /usr/local/bin
for command in ${EXPORT1} ${EXPORT2}
do
    [ -f ${DFS}/bin/${command} ] && {
        if [ -f ${command} ]
        then
            diff ${DFS}/bin/${command} ${command} > /dev/null && {
                rm -f ${command}
                ln -s ${DFS}/bin/${command} .
            }
        else
            ln -s ${DFS}/bin/${command} .
        fi
    }
done
any2any=${DFS}/bin/any2any
for any in ${ANY}
do
    if [ -f ${any} ]
    then
        diff ${any} ${any2any} > /dev/null && {
            rm -f ${any}
            ln -s ${any2any} ${any}
        }
    else
        ln -s ${any2any} ${any}
    fi
done
cap2any=${DFS}/bin/cap2any
for cap in ${CAP}
do
    if [ -f ${cap} ]
    then
        diff ${cap} ${cap2any} > /dev/null && {
            rm -f ${cap}
            ln -s ${cap2any} ${cap}
        }
    else
        ln -s ${cap2any} ${cap}
    fi
done
backgrounds=${DFS}/bin/backgrounds
for bgd in ${BGD}
do
    if [ -f ${bgd} ]
    then
        diff ${bgd} ${backgrounds} > /dev/null && {
            rm -f ${bgd}
            ln -s ${backgrounds} ${bgd}
        }
    else
        ln -s ${backgrounds} ${bgd}
    fi
done
updscript=${DFS}/bin/upd
for upd in ${UPD}
do
    if [ -f ${upd} ]
    then
        diff ${upd} ${updscript} > /dev/null && {
            rm -f ${upd}
            ln -s ${updscript} ${upd}
        }
    else
        ln -s ${updscript} ${upd}
    fi
done
chk=${DFS}/bin/chk
for lnk in ${CHK}
do
    if [ -f ${lnk} ]
    then
        diff ${lnk} ${chk} > /dev/null && {
            rm -f ${lnk}
            ln -s ${chk} ${lnk}
        }
    else
        ln -s ${chk} ${lnk}
    fi
done
[ -d /usr/local/share ] || mkdir /usr/local/share
[ -d /usr/local/share/bash ] || mkdir /usr/local/share/bash
cd /usr/local/share/bash
for script in ${DFS}/share/bash/*
do
    [ "${script}" ==  "${DFS}/share/bash/*" ] && continue
    b=`basename ${script}`
    if [ -f $b ]
    then
        diff $b ${script} > /dev/null && {
            rm -f $b
            ln -s ${script} .
        }
    else
        ln -s ${script} .
    fi
done
[ -d /usr/local/share/images ] || mkdir /usr/local/share/images
cd /usr/local/share/images
for image in ${DFS}/share/images/*
do
    [ "${image}" ==  "${DFS}/share/images/*" ] && continue
    b=`basename ${image}`
    if [ -f $b ]
    then
        diff $b ${image} > /dev/null && {
            rm -f $b
            ln -s ${image} .
        }
    else
        ln -s ${image} .
    fi
done

# Set the IP in synergyctl, assuming this is the Synergy server
SYNCTL="${DFS}/bin/synergyctl"
[ -f ${SYNCTL} ] && {
  IP=`hostname -I | awk ' { print $1 } '`
  [ "${IP}" ] && {
    cat ${SYNCTL} | sed -e "s/XX.X.X.XX/${IP}/" > /tmp/syn$$
    cp /tmp/syn$$ ${SYNCTL}
    rm -f /tmp/syn$$
  }
}

# This breaks the RPM install as RPM is always non-interactive
# [ -x ${DFS}/bin/dl_fred_scripts ] && ${DFS}/bin/dl_fred_scripts

exit 0
